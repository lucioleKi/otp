module 'test' ['main'/1,
	       'module_info'/0,
	       'module_info'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[116|[101|[115|[116|[46|[101|[114|[108]]]]]]]],1}]]
'main'/1 =
    %% Line 137
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'main',1}}] ) of
	      <X> when 'true' ->
		  %% Line 139
		  ( letrec
			'lc$^0'/1 =
			    fun (_6) ->
				case _6 of
				  <[E|_2]> when 'true' ->
				      ( letrec
					    'lc$^1'/1 =
						fun (_8) ->
						    case _8 of
						      <[Res|_4]>
							  when call 'erlang':'/='
								(Res,
								 'ok') ->
							  let <_10> =
							      apply 'lc$^1'/1
								  (_4)
							  in  ( [Res|_10]
								-| ['compiler_generated'] )
						      ( <[_3|_4]> when 'true' ->
							    apply 'lc$^1'/1
								(_4)
							-| ['compiler_generated'] )
						      <[]> when 'true' ->
							  apply 'lc$^0'/1
							      (_2)
						      ( <_9> when 'true' ->
							    call 'erlang':'error'
								({'bad_generator',_9})
							-| ['compiler_generated'] )
						    end
					in  let <_5> =
						apply 'some_test'/1
						    (E)
					    in  apply 'lc$^1'/1
						    ([_5|[]])
					-| ['list_comprehension'] )
				  ( <[_1|_2]> when 'true' ->
					apply 'lc$^0'/1
					    (_2)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_7> when 'true' ->
					call 'erlang':'error'
					    ({'bad_generator',_7})
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (X)
		    -| ['list_comprehension'] )
	      ( <_11> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause',_11}
			     -| [{'function',{'main',1}}] ))
		      -| [{'function',{'main',1}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'main',1}}] )
      -| [{'function',{'main',1}}] )
'some_test'/1 =
    %% Line 141
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'some_test',1}}] ) of
	      <X> when 'true' ->
		  %% Line 142
		  X
	      ( <_1> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause',_1}
			     -| [{'function',{'some_test',1}}] ))
		      -| [{'function',{'some_test',1}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'some_test',1}}] )
      -| [{'function',{'some_test',1}}] )
'module_info'/0 =
    ( fun () ->
	  ( case ( <>
		   -| [{'function',{'module_info',0}}] ) of
	      <> when 'true' ->
		  call 'erlang':'get_module_info'
		      ('test')
	      ( <> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause'}
			     -| [{'function',{'module_info',0}}] ))
		      -| [{'function',{'module_info',0}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'module_info',0}}] )
      -| [{'function',{'module_info',0}}] )
'module_info'/1 =
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'module_info',1}}] ) of
	      <X> when 'true' ->
		  call 'erlang':'get_module_info'
		      ('test', X)
	      ( <_1> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause',_1}
			     -| [{'function',{'module_info',1}}] ))
		      -| [{'function',{'module_info',1}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'module_info',1}}] )
      -| [{'function',{'module_info',1}}] )
end